int partition(array a[] : int, int l, int r){
int pivot;
int i;
int j;
int t;
bool flag;
flag = #T;
pivot = a[l];
i = l;
j = r + 1;
while flag then
do
i = i+1;
while ((a[i] <= pivot) & (i <= r)) end;
do
j = j -1;
while(a[j] > pivot) end;
if (i < j) then
t = a[i];
a[i] = a[j];
a[j] = t;
flag = TRUE;
else
flag = FALSE;
end;
end;
t = a[l];
a[l] = a[j];
a[j] = t;
return j;
};
quickSort( int a[], int l, int r): void{
int j;
if ( l < r ) then
j = partition( a, l, r);
quickSort( a, l, (j-1);
quickSort( a, (j+1), r);
end;
};
int main(){
array a[9]: int;
a = {7, 12, 1, 2, 0, 15, 4, 11, 9};
int i;
for 0:8 then
output (string) a[i];
end;
quickSort(a, 0, 8);
output "Sorted array is: ";
for 0:8 then
output (string) a[i];
};
return 0;
};